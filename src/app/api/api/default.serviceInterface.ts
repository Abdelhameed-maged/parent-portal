/**
 * ReqRes API
 * Fake data CRUD API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { LoginPost200Response } from '../model/models';
import { LoginPost400Response } from '../model/models';
import { LoginPostRequest } from '../model/models';
import { RegisterPost200Response } from '../model/models';
import { ResourceGet200Response } from '../model/models';
import { ResourceIdGet200Response } from '../model/models';
import { UsersGet200Response } from '../model/models';
import { UsersIdGet200Response } from '../model/models';
import { UsersIdPut200Response } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface DefaultServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Creates a session
     * 
     * @param loginPostRequest 
     */
    loginPost(loginPostRequest: LoginPostRequest, extraHttpRequestParams?: any): Observable<LoginPost200Response>;

    /**
     * Ends a session
     * 
     */
    logoutPost(extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Creates a user
     * 
     * @param loginPostRequest 
     */
    registerPost(loginPostRequest: LoginPostRequest, extraHttpRequestParams?: any): Observable<RegisterPost200Response>;

    /**
     * Fetches a resource list
     * 
     * @param page 
     * @param perPage 
     */
    resourceGet(page?: number, perPage?: number, extraHttpRequestParams?: any): Observable<ResourceGet200Response>;

    /**
     * Deletes an unknown resource
     * 
     */
    resourceIdDelete(extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Fetches an unknown resource
     * 
     * @param id 
     */
    resourceIdGet(id?: number, extraHttpRequestParams?: any): Observable<ResourceIdGet200Response>;

    /**
     * Updates an unknown resource
     * 
     */
    resourceIdPatch(extraHttpRequestParams?: any): Observable<UsersIdPut200Response>;

    /**
     * Updates an unknown resource
     * 
     */
    resourceIdPut(extraHttpRequestParams?: any): Observable<UsersIdPut200Response>;

    /**
     * Fetches a user list
     * 
     * @param page 
     * @param perPage 
     */
    usersGet(page?: number, perPage?: number, extraHttpRequestParams?: any): Observable<UsersGet200Response>;

    /**
     * Deletes a user
     * 
     */
    usersIdDelete(extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Fetches a user
     * 
     * @param id 
     */
    usersIdGet(id?: number, extraHttpRequestParams?: any): Observable<UsersIdGet200Response>;

    /**
     * Updates a user
     * 
     */
    usersIdPatch(extraHttpRequestParams?: any): Observable<UsersIdPut200Response>;

    /**
     * Updates a user
     * 
     */
    usersIdPut(extraHttpRequestParams?: any): Observable<UsersIdPut200Response>;

}
